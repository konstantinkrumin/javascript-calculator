{"version":3,"sources":["context.js","helper/modifyCalcRow.js","App.js","components/calculator-components/display.js","components/calculator-components/clear.js","components/calculator-components/equals.js","components/calculator-components/repeated-components/number.js","components/calculator-components/numbers.js","components/calculator-components/zero.js","components/calculator-components/decimal.js","components/calculator-components/repeated-components/operation.js","components/calculator-components/operations.js","components/calculator.js","components/interface.js","index.js"],"names":["Context","React","createContext","modifyCalcRow","exception","value","displayNum","calcRow","setCalcRow","regex","length","test","prevValue","concat","toString","strCopy","slice","App","total_precision_num","max_length","max_length_calc_row","DEFAULT_VALUE","DEFAULT_CALC_ROW","DEFAULT_IS_CALCULATED","useState","setDisplayNum","isCalculated","setIsCalculated","handleChange","event","target","handleDelete","undefined","includes","prevValStr","numbersAfterDecimal","split","parseFloat","toFixed","handleOperation","lastEntry","beforeLastEntry","indexOf","handleEqual","totalRow","total","eval","toPrecision","Provider","Display","useContext","id","className","Clear","type","onClick","Equals","disabled","Number","props","name","num","Numbers","Zero","Decimal","Operation","symbol","Operations","Calculator","Interface","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8b265440.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","export default function modifyCalcRow(\r\n  exception,\r\n  value,\r\n  displayNum,\r\n  calcRow,\r\n  setCalcRow,\r\n  regex\r\n) {\r\n  if (exception) {\r\n    displayNum.length === 1 && regex.test(displayNum)\r\n      ? setCalcRow(prevValue => prevValue.concat(value))\r\n      : setCalcRow(prevValue =>\r\n          prevValue.concat(displayNum.toString() + value)\r\n        );\r\n  } else {\r\n    let strCopy = calcRow.slice(0, calcRow.length - 1);\r\n    displayNum.length === 1 && regex.test(displayNum)\r\n      ? setCalcRow(strCopy + value)\r\n      : setCalcRow(prevValue =>\r\n          prevValue.concat(displayNum.toString() + value)\r\n        );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./styles/main.scss\";\n\nimport modifyCalcRow from \"./helper/modifyCalcRow\";\n\nimport Interface from \"./components/interface\";\n\nimport Context from \"./context\";\n\nexport default function App() {\n  // defines the max length of number that could be showed in the output\n  const total_precision_num = 12;\n\n  // max length of separate nums entered\n  const max_length = 15;\n  // max length of a calc row to calculate\n  const max_length_calc_row = 40;\n\n  const DEFAULT_VALUE = 0;\n  const DEFAULT_CALC_ROW = \"\";\n  const DEFAULT_IS_CALCULATED = false;\n  let regex = /\\+|-|\\*|\\//;\n\n  const [calcRow, setCalcRow] = useState(DEFAULT_CALC_ROW);\n  const [displayNum, setDisplayNum] = useState(DEFAULT_VALUE);\n  const [isCalculated, setIsCalculated] = useState(DEFAULT_IS_CALCULATED);\n\n  function handleChange(event) {\n    const { value } = event.target;\n\n    if (isCalculated) {\n      handleDelete();\n    }\n\n    if (\n      (displayNum.length < max_length || displayNum.length === undefined) &&\n      calcRow.length < max_length_calc_row\n    ) {\n      if (\n        value === \".\" &&\n        !displayNum.toString().includes(\".\") &&\n        !regex.test(displayNum)\n      ) {\n        setDisplayNum((prevValue) => prevValue.toString().concat(\".\"));\n      } else if (regex.test(displayNum)) {\n        setDisplayNum(value);\n      } else if (value !== \".\") {\n        setDisplayNum((prevValue) => {\n          const prevValStr = prevValue.toString();\n          let numbersAfterDecimal = 0;\n          if (prevValStr.includes(\".\")) {\n            numbersAfterDecimal = prevValStr.split(\".\")[1].length;\n            // for current value\n            numbersAfterDecimal++;\n          }\n          return parseFloat(prevValStr.concat(value)).toFixed(\n            numbersAfterDecimal\n          );\n        });\n      }\n    }\n  }\n\n  function handleOperation(event) {\n    const { value } = event.target;\n\n    if (calcRow === \"\") {\n      setCalcRow((prevValue) =>\n        prevValue.concat(displayNum.toString() + value)\n      );\n      setDisplayNum(value);\n    } else {\n      if (isCalculated) {\n        setCalcRow(displayNum + value);\n        setDisplayNum(value);\n        setIsCalculated(false);\n      }\n\n      let lastEntry = calcRow[calcRow.length - 1];\n      let beforeLastEntry = calcRow[calcRow.length - 2];\n\n      if (\n        regex.test(lastEntry) &&\n        regex.test(beforeLastEntry) &&\n        value !== lastEntry\n      ) {\n        setCalcRow(\n          (prevValue) =>\n            prevValue.slice(0, calcRow.indexOf(beforeLastEntry)) + value\n        );\n        setDisplayNum(value);\n      } else if (regex.test(lastEntry)) {\n        switch (value) {\n          case \"+\":\n          case \"*\":\n          case \"/\":\n            modifyCalcRow(false, value, displayNum, calcRow, setCalcRow, regex);\n            break;\n          case \"-\":\n            /-/.test(lastEntry)\n              ? modifyCalcRow(\n                  false,\n                  value,\n                  displayNum,\n                  calcRow,\n                  setCalcRow,\n                  regex\n                )\n              : modifyCalcRow(\n                  true,\n                  value,\n                  displayNum,\n                  calcRow,\n                  setCalcRow,\n                  regex\n                );\n            break;\n          default:\n            break;\n        }\n        setDisplayNum(value);\n      }\n    }\n  }\n\n  function handleEqual() {\n    let totalRow = calcRow.slice(0);\n\n    regex.test(displayNum)\n      ? (totalRow = totalRow.slice(0, totalRow.length - 1))\n      : (totalRow = totalRow.concat(displayNum));\n\n    let total = eval(totalRow);\n    total =\n      total.toString().length >= total_precision_num\n        ? (total = total.toPrecision(total_precision_num))\n        : total;\n\n    setCalcRow(totalRow + \" = \" + total);\n    setDisplayNum(total);\n    setIsCalculated(true);\n  }\n\n  function handleDelete() {\n    setCalcRow(DEFAULT_CALC_ROW);\n    setIsCalculated(DEFAULT_IS_CALCULATED);\n    setDisplayNum(DEFAULT_VALUE);\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        calcRow,\n        isCalculated,\n        displayNum,\n        handleDelete,\n        handleChange,\n        handleEqual,\n        handleOperation\n      }}\n    >\n      <Interface />\n    </Context.Provider>\n  );\n}\n","import React, { useContext } from \"react\";\r\n\r\nimport Context from \"../../context\";\r\n\r\nexport default function Display() {\r\n  const { calcRow, displayNum } = useContext(Context);\r\n\r\n  return (\r\n    <div id=\"display-container\" className=\"grid-display\">\r\n      <p id=\"formula-display\">{calcRow}</p>\r\n      <p id=\"display\">{displayNum}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Context from \"../../context\";\r\n\r\nexport default function Clear() {\r\n  const { handleDelete } = useContext(Context);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      id=\"clear\"\r\n      className=\"btn grid-clear\"\r\n      onClick={handleDelete}\r\n    >\r\n      AC\r\n    </button>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Context from \"../../context\";\r\n\r\nexport default function Equals() {\r\n  const { isCalculated, handleEqual } = useContext(Context);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn grid-equal\"\r\n      id=\"equals\"\r\n      disabled={isCalculated}\r\n      onClick={handleEqual}\r\n    >\r\n      =\r\n    </button>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Context from \"../../../context\";\r\n\r\nexport default function Number(props) {\r\n  const { handleChange } = useContext(Context);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      name=\"number\"\r\n      className=\"btn\"\r\n      id={props.id}\r\n      value={props.num}\r\n      onClick={handleChange}\r\n    >\r\n      {props.num}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Number from \"./repeated-components/number\";\r\n\r\nexport default function Numbers() {\r\n  return (\r\n    <div id=\"numbers\" className=\"grid-numbers\">\r\n      <Number id=\"seven\" num={7} />\r\n      <Number id=\"eight\" num={8} />\r\n      <Number id=\"nine\" num={9} />\r\n      <Number id=\"four\" num={4} />\r\n      <Number id=\"five\" num={5} />\r\n      <Number id=\"six\" num={6} />\r\n      <Number id=\"one\" num={1} />\r\n      <Number id=\"two\" num={2} />\r\n      <Number id=\"three\" num={3} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Context from \"../../context\";\r\n\r\nexport default function Zero() {\r\n  const { handleChange } = useContext(Context);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      name=\"number\"\r\n      className=\"btn grid-zero\"\r\n      id=\"zero\"\r\n      value={0}\r\n      onClick={handleChange}\r\n    >\r\n      0\r\n    </button>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Context from \"../../context\";\r\n\r\nexport default function Decimal() {\r\n  const { handleChange } = useContext(Context);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      value=\".\"\r\n      className=\"btn grid-decimal\"\r\n      id=\"decimal\"\r\n      onClick={handleChange}\r\n    >\r\n      .\r\n    </button>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Context from \"../../../context\";\r\n\r\nexport default function Operation(props) {\r\n  const { handleOperation } = useContext(Context);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      name=\"operation\"\r\n      className=\"btn operation-element\"\r\n      id={props.id}\r\n      value={props.symbol}\r\n      onClick={handleOperation}\r\n    >\r\n      {props.symbol}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Operation from \"./repeated-components/operation\";\r\n\r\nexport default function Operations() {\r\n  return (\r\n    <div id=\"operations\" className=\"grid-operations\">\r\n      <Operation id=\"add\" symbol=\"+\" />\r\n      <Operation id=\"subtract\" symbol=\"-\" />\r\n      <Operation id=\"multiply\" symbol=\"*\" />\r\n      <Operation id=\"divide\" symbol=\"/\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Display from \"./calculator-components/display\";\r\nimport Clear from \"./calculator-components/clear\";\r\nimport Equals from \"./calculator-components/equals\";\r\nimport Numbers from \"./calculator-components/numbers\";\r\nimport Zero from \"./calculator-components/zero\";\r\nimport Decimal from \"./calculator-components/decimal\";\r\nimport Operations from \"./calculator-components/operations\";\r\n\r\nexport default function Calculator() {\r\n  return (\r\n    <div id=\"calculator-container\">\r\n      <Display />\r\n      <Clear />\r\n      <Equals />\r\n      <Numbers />\r\n      <Zero />\r\n      <Decimal />\r\n      <Operations />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Calculator from \"./calculator\";\r\n\r\nexport default function Interface() {\r\n  return (\r\n    <div id=\"main-window\">\r\n      <Calculator />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}